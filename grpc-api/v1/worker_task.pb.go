// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.7
// source: worker_task.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkerTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Difficulty    Difficulty             `protobuf:"varint,2,opt,name=difficulty,proto3,enum=v1.Difficulty" json:"difficulty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorkerTask) Reset() {
	*x = WorkerTask{}
	mi := &file_worker_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorkerTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerTask) ProtoMessage() {}

func (x *WorkerTask) ProtoReflect() protoreflect.Message {
	mi := &file_worker_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerTask.ProtoReflect.Descriptor instead.
func (*WorkerTask) Descriptor() ([]byte, []int) {
	return file_worker_task_proto_rawDescGZIP(), []int{0}
}

func (x *WorkerTask) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WorkerTask) GetDifficulty() Difficulty {
	if x != nil {
		return x.Difficulty
	}
	return Difficulty_UNSPECIFIED
}

var File_worker_task_proto protoreflect.FileDescriptor

const file_worker_task_proto_rawDesc = "" +
	"\n" +
	"\x11worker_task.proto\x12\x02v1\x1a\x10difficulty.proto\"L\n" +
	"\n" +
	"WorkerTask\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12.\n" +
	"\n" +
	"difficulty\x18\x02 \x01(\x0e2\x0e.v1.DifficultyR\n" +
	"difficultyB9Z7github.com/task-resolver/task-resolver-pkg/grpc-api/v1/b\x06proto3"

var (
	file_worker_task_proto_rawDescOnce sync.Once
	file_worker_task_proto_rawDescData []byte
)

func file_worker_task_proto_rawDescGZIP() []byte {
	file_worker_task_proto_rawDescOnce.Do(func() {
		file_worker_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_worker_task_proto_rawDesc), len(file_worker_task_proto_rawDesc)))
	})
	return file_worker_task_proto_rawDescData
}

var file_worker_task_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_worker_task_proto_goTypes = []any{
	(*WorkerTask)(nil), // 0: v1.WorkerTask
	(Difficulty)(0),    // 1: v1.Difficulty
}
var file_worker_task_proto_depIdxs = []int32{
	1, // 0: v1.WorkerTask.difficulty:type_name -> v1.Difficulty
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_worker_task_proto_init() }
func file_worker_task_proto_init() {
	if File_worker_task_proto != nil {
		return
	}
	file_difficulty_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_worker_task_proto_rawDesc), len(file_worker_task_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_worker_task_proto_goTypes,
		DependencyIndexes: file_worker_task_proto_depIdxs,
		MessageInfos:      file_worker_task_proto_msgTypes,
	}.Build()
	File_worker_task_proto = out.File
	file_worker_task_proto_goTypes = nil
	file_worker_task_proto_depIdxs = nil
}
